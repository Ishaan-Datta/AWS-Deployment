apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentication
spec:
  replicas: {{ .Values.auth.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.auth.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.auth.appName }}
    spec:
      containers:
      - name: {{ .Values.auth.appName }}-{{ randAlpha 5 | lower }}
        image: "{{ .Values.auth.image.repository }}:{{ .Values.auth.image.tag }}"
        imagePullPolicy: {{ .Values.auth.image.pullPolicy }}
        resources: 
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
          runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
          readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
        ports:
          - containerPort: {{ .Values.auth.image.port }}
        env:
          - name: PORT
            value: "{{ .Values.auth.image.port }}"
          # - name: LOG_LEVEL
          #   valueFrom:
          #     configMapKeyRef:
          #       name: log-config
          #       key: log-level
        livenessProbe:
          httpGet:
            path: /status
            port: {{ .Values.auth.image.port }}
          initialDelaySeconds: 5
          timeoutSeconds: 1